- EXCEPTION TYPES
- User Defined Exceptions
/////////////////////////
// EXAMPLE

import java.util.InputMismatchException;
import java.util.Scanner;
class Main {
  public static void main(String args[]) throws InputMismatchException {
    Scanner sc = new Scanner(System.in);
    int x;
    try {
      System.out.print("Enter Integer: ");
      x = sc.nextInt();
    } catch(InputMismatchException error) {
      System.out.println("Wrong input");
    } finally {
      x = 0;
    }
    System.out.println("X = " + x);
  }
}

// try, catch, throw, throws , finally 


// throw new NumberFormatException();

// If the method cannot handle the exception, it must declare a list of exceptions it may cause.

// This list is specified using the throws keyword in the method header.
All checked exceptions must be caught or declared.

// There are two types of Exceptions,
1. Checked exceptions
2. Unchecked exceptions
- Checked exceptions must be caught or rethrown. 
- Unchecked exceptions do not have to be
caught

////////////////////////////
/// EXCEPTION TYPES
- Unchecked Exceptions

// Unchecked Exceptions:

ArithmeticException : Arithmetic error, such as divide-by-zero.
ArrayIndexOutOfBoundsException : Array index is out-of-bounds.
ArrayStoreException : Assignment to an array element of an incompatible type.
ClassCastException : Invalid cast.
IllegalArgumentException : Illegal argument used to invoke a method.
IllegalMonitorStateException : Illegal monitor operation, such as waiting on an unlocked
thread.
IllegalStateException : Environment or application is in incorrect state.
IllegalThreadStateException : Requested operation not compatible with current thread
state.
IndexOutOfBoundsException : Some type of index is out-of-bounds.
NegativeArraySizeException : Array created with a negative size.
NullPointerException : Invalid use of a null reference.
NumberFormatException : Invalid conversion of a string to a numeric format.
SecurityException : Attempt to violate security.
StringIndexOutOfBounds : Attempt to index outside the bounds of a string.
UnsupportedOperationException : An unsupported operation was encountered.

// Checked Exceptions:

ClassNotFoundException
CloneNotSupportedException
IllegalAccessException
InstantiationException
InterruptedException
NoSuchFieldException
NoSuchMethodException


///////////////////////////////
// User Defined Exceptions

import java.util.Scanner;

class Main {
  public static void main(String args[]) throws MyException{
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    if(n < 0) throw new MyException(n);
  }
}

class MyException  extends Exception {
  MyException(int n) {
    System.out.println("Number not allowed");
  }
}








